/* @flow */
import path from 'path'
const flatten = require('lodash.flatten')
const glob = require('glob')

const SEP_FOR_TYPE_AND_COMMENT = ' //: '

export function buildTempFile(patternExprs: string[]) {
  const list = flatten(patternExprs.map(pat => glob.sync(pat)))
  const refs = list.map((fpath, index) => {
    const relpath = '../../' + fpath.replace(process.cwd(), '')
    const base = path
      .basename(fpath)
      .replace(/\.jsx?/, '')
      .replace(/\-/, '$')
    const ref = `_${index}_${base}`
    return { ref, fpath }
  })
  return (
    '/* @flow */\n' +
    refs
      .map((r, index) => {
        const relpath = '../../' + r.fpath.replace(process.cwd(), '')
        return `import ${r.ref} from '${relpath}'`
      })
      .join('\n') +
    '\n/*---*/\n' +
    refs
      .map((r, index) => {
        const relpath = path.join('../../' + r.fpath.replace(process.cwd(), ''))
        return `${r.ref}${SEP_FOR_TYPE_AND_COMMENT}{"symbolFor": "${relpath}"}`
      })
      .join('\n')
  )
}

export const header = `/* @flow */
import React from 'react'
import { storiesOf } from '@storybook/react'
const ctx = storiesOf('Generated by flow', module)
`

export const template = (fpath: string, props: any) => `${header}
import App from '../../src/components/App'
ctx.add('${fpath}', () => <App {...${JSON.stringify(props)}}/>)
`
